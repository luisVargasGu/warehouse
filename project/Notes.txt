Step 1:

Created the needed classes following our design implementation. Subject to change. 

Step 2:

Created the constructor and getAmount()-which returns the number of fascia in that lane in the Warehouse. The constructor will read from the traversal table, so that we can record the amount of fascia in each lane found in the Warehouse.  

Step 3:

Completed WarehouseTesting.java, which has the testing for Warehouse.java. Also completed the constructor for Order.java, which takes in stings colour and model as parameters. Currently SKU front and back are set up to be private, so I have also set up getters and setters. However that is subject to change these variable may become public, based on how SKUReader is implemented. OrderTesting has also been set up, however it doesnâ€™t test the getters/setters yet. Also created a folder called Testing files where we can store our test files for file testing. 

Step 4:

Completed Documentation for WarehouseTesting.java. Completed QueueOfOrders.java were we have the queue as a array list, this may be subjected to change. Also finished  QueueOfOrdersTesting.java, which contains the testing for QueueOfOrders.java. I have also started The constructor and the addOrders() method which is packages 4 orders into one picking Request.

Step 5:

Completed Truck/TruckTesting and Supply/SupplyTesting. Started the Main structure and PickingRequest.java. Tried to pass Orders from Order.java to PickingRequest.java. Have started testing.

Step 6:

Extended class SKUReader to  PickingRequest, which is extended to QueuueOfOrders, which is extended to Order. Modified the parameters of these classes so that SKUReader can receive a file path. Also added in the files, as variables, we need to read in to Main aka translation.csv and transversal.cv. Re-ran testing for the classes that have been extended all the way to SKUReader. Testing has all passed and been successful. Completed PickingRequest.java, however I have yet to start the testing for this class.

Step 7:
March 13 me and Donald meet after class to use the extra provided time to discuss our current code design hoping to make it more efficient and modular. Together we worked through the Java classes Main, Worker, QueueOfWorker and Warehouse modifying methods to allow faster turn time. After that we split up I worked on Loading and Supply, as a result I modified Main. Donald worked on Sequencing, PickingRequest and connected these modified parts with the new Loading and Supply classes. We agreed that we would no push anything as we had created a branch before and didn't want the same reoccurrence, as a result we agreed that when I completed my classes I would send them to Donald. Donald would unite everything then push to the repository.

Step 8: 
We worked on testing our classes.

INSTRUCTIONS:

To run the program, first put in the file paths of the translationtable.csv initial.csv and 16_orders.txt files inside the Main class. Then put in the path where final.csv and orders.csv should be written too also in Main. Then run Main itself.

Phase II: (Luis joined our group)

Step 1: Change all System.out.print to loggers. Making sure to note which are events, input events, and output events.
